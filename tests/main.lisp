(defpackage cl-gdsfeel/tests/main
  (:use :cl
        :cl-gdsfeel
        :rove))
(in-package :cl-gdsfeel/tests/main)

;; NOTE: To run this test file, execute `(asdf:test-system :cl-gdsfeel)' in your Lisp.

;; ---------- FROM STREAM.DC ---------------------------------------------
;; 4-byte real:
;; 01000001 00010000 00000000 00000000 =  1    Note that the 7-bit exponent
;; 01000001 00100000 00000000 00000000 =  2    field = 65, meaning that the
;; 01000001 00110000 00000000 00000000 =  3    actual exponent is 65-64=1
;; 11000001 00010000 00000000 00000000 = -1
;; 11000001 00100000 00000000 00000000 = -2
;; 11000001 00110000 00000000 00000000 = -3

;; 01000000 10000000 00000000 00000000 =  .5
;; 01000000 10011001 10011001 10011001 =  .6
;; 01000000 10110011 00110011 00110011 =  .7
;; 01000001 00011000 00000000 00000000 = 1.5
;; 01000001 00011001 10011001 10011001 = 1.6
;; 01000001 00011011 00110011 00110011 = 1.7

;; 01000001 00010000 00000000 00000000 = 1
;; 01000001 10100000 00000000 00000000 = 10
;; 01000010 01100100 00000000 00000000 = 100
;; 01000011 00111110 10000000 00000000 = 1000
;; 01000100 00100111 00010000 00000000 = 10000
;; 01000101 00011000 01101010 00000000 = 100000

;; The representation of the negative values of real numbers is EXACTLY the
;; same as the positive, EXCEPT that the highest order bit is 1, not 0.

;; In the eight-byte real representation, the first four bytes are EXACTLY the
;; same as in the four-byte real representation. The last four bytes contain
;; additional "binary places" for more resolution.

;; -----------------------------------------------------------------------

(deftest test-decode-dgl-real8
  (testing "01000001 00010000 00000000 00000000 =  1"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000001 #b00010000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           1)))

  (testing "01000010 00010000 00000000 00000000 =  2"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000001 #b00100000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           2)))

  (testing "01000011 00010000 00000000 00000000 =  3"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000001 #b00110000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           3)))

  (testing "11000001 00010000 00000000 00000000 = -1"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b11000001 #b00010000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           -1)))

  (testing "11000010 00010000 00000000 00000000 = -2"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b11000001 #b00100000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           -2)))

  (testing "11000011 00010000 00000000 00000000 = -3"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b11000001 #b00110000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           -3)))

  (testing "01000000 10000000 00000000 00000000 =  .5"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000000 #b10000000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           0.5)))

  (testing "01000000 10011001 10011001 10011001 =  .6"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000000 #b10011001 #b10011001 #b10011001 
              #b00000000 #b00000000 #b00000000 #b00000000))
           0.6)))

  (testing "01000000 10110011 00110011 00110011 =  .7"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000000 #b10110011 #b00110011 #b00110011 
              #b00000000 #b00000000 #b00000000 #b00000000))
           0.7)))

  (testing "01000001 00011000 00000000 00000000 = 1.5"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000001 #b00011000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           1.5)))

  (testing "01000001 00011001 10011001 10011001 = 1.6"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000001 #b00011001 #b10011001 #b10011001
              #b00000000 #b00000000 #b00000000 #b00000000))
           1.6)))

  (testing "01000001 00011011 00110011 00110011 = 1.7"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000001 #b00011011 #b00110011 #b00110011
              #b00000000 #b00000000 #b00000000 #b00000000))
           1.7)))

  (testing "01000001 00010000 00000000 00000000 =  1"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000001 #b00010000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           1)))

  (testing "01000001 10100000 00000000 00000000 = 10"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000001 #b10100000 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           10)))

  (testing "01000010 01100100 00000000 00000000 = 100"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000010 #b01100100 #b00000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           100)))

  (testing "01000011 00111110 10000000 00000000 = 1000"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000011 #b00111110 #b10000000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           1000)))

  (testing "01000100 00100111 00010000 00000000 = 10000"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000100 #b00100111 #b00010000 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           10000)))

  (testing "01000101 00011000 01101010 00000000 = 100000"
    (ok (= (cl-gdsfeel::decode-dgl-real8
            #(#b01000101 #b00011000 #b01101010 #b00000000
              #b00000000 #b00000000 #b00000000 #b00000000))
           100000)))

  )

(run-suite *package*)

